#!/usr/bin/env node
var places, request, suggest, suggestParams, suggestResponse, understand, unknownResponse;

request = require('request');

places = require('../places.json');

request.get('https://raw.githubusercontent.com/egemsoft/kamuran/master/places.json', function(error, response, body) {
  if (!error && response.statusCode === 200) {
    places = JSON.parse(body);
  }
  places.lunch = places.lunch.concat(places.common.concat(['randfix']));
  places.dinner = places.dinner.concat(places.common.concat(['randfix']));
  return understand();
});

suggestParams = ['suggest', 'nereye gidelim', 'nereye gidelim?', 'nereye gideyim', 'nereye gideyim?', 'ne dersin', 'ne dersin?'];

suggestResponse = function(place) {
  var responses;
  responses = ["" + place + " hiç fena olmaz.", "" + place + " nasıl fikir?", "Ne dersin, " + place + " uyar mı?", "" + place + " iyidir " + (place.toLowerCase()), "Neden " + place + " olmasın?"].concat(['randfix']);
  return responses[Math.floor(Math.random() * responses.length)];
};

unknownResponse = function() {
  return console.log('Her şeyi bilmiyorum maalesef.');
};

suggest = function() {
  var date, type;
  date = new Date();
  type = date.getHours() < 14 ? 'lunch' : 'dinner';
  return console.log(suggestResponse(places[type][Math.floor(Math.random() * places[type].length)]));
};

understand = function() {
  if (process.argv.length === 2) {
    return console.log('Efendim?');
  }
  if (process.argv.length === 3 && suggestParams.indexOf(process.argv[2]) !== -1) {
    return suggest();
  }
  if (process.argv.length === 4 && suggestParams.indexOf(process.argv[2] + ' ' + process.argv[3]) !== -1) {
    return suggest();
  }
  return unknownResponse();
};
